// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

@media (max-width: 959px) {
    .sm\:center {
        text-align: center;
    }
}

.center {
    text-align: center;
}

.flow > * + * {
    margin-block-start: 1em;
}

.flow-md > * + * {
    margin-block-start: var(--space-md);
}

.flow-lg > * + * {
    margin-block-start: var(--space-lg);
}

.flow-xl > * + * {
    margin-block-start: var(--space-xl);
}

.flow-xxl > * + * {
    margin-block-start: var(--space-xxl);
}

.switcher {
    --threshold: 768px;
    --space: var(--space-lg);

    margin-block-start: var(--space-lg);
}

.switcher > * {
    display: flex;
    flex-wrap: wrap;
    margin: calc(var(--space) / 2 * -1);
}

.switcher > * > * {
    flex-basis: calc((var(--threshold) - (100% - var(--space))) * 999);
    flex-grow: 1;
    margin: calc(var(--space) / 2);
}

.switcher > * > :nth-last-child(n+4),
.switcher > * > :nth-last-child(n+4) ~ * {
    flex-basis: 100%;
}

.grid {
    --gap: var(--space-lg);
    --columns: 2;

    display: grid;
    grid-gap: var(--gap);
}

.two\:three,
.three\:two {
    --space: var(--space-lg);

    display: flex;
    flex-direction: column;
}

.two\:three > * + *,
.three\:two > * + * {
    margin-block-start: var(--space);
}

.three\:two__three,
.two\:three__three {
    > picture,
    > img {
        margin-inline: auto;
        max-width: calc(640 / 16 * 1rem);
    }
}

.bg {
    position: relative;
}

.bg--yellow-85 {
    --cta-accent: var(--color-yellow-75);
    --cta-interactive: var(--color-yellow-55);

    background-color: var(--color-yellow-85);
}

.bg--red-75 {
    --cta-accent: var(--color-red-65);
    --cta-interactive: var(--color-red-45);

    background-color: var(--color-red-75);
}

.bg--orange-75 {
    --cta-accent: var(--color-orange-65);
    --cta-interactive: var(--color-orange-55);

    background-color: var(--color-orange-75);
}

.bg--green-85 {
    --cta-accent: var(--color-green-75);
    --cta-interactive: var(--color-green-55);

    background-color: var(--color-green-85);
}

.bg--cream-95 {
    --cta-accent: var(--color-cream-85);
    --cta-interactive: var(--color-cream-65);

    background-color: var(--color-cream-95);
}

.bg--purple-75 {
    background-color: var(--color-purple-75);
}

.bg--teal-75 {
    background-color: var(--color-teal-75);
}

.bg--blue-65 {
    background-color: var(--color-blue-65);
}

.bg--yellow-75 {
    background-color: var(--color-yellow-75);
}

.bg--purple-35 {
    --cta-accent: var(--color-purple-25);
    --cta-interactive: var(--color-purple-05);

    background-color: var(--color-purple-35);
    color: var(--color-white);
}

.wave {
    height: auto;
    max-width: 100%;
    position: absolute;
}

.wave--bottom {
    inset-block-end: -1px;
}

.wave--top {
    inset-block-start: -1px;
}

@media (min-width: 960px) {
    .wave--bottom {
        inset-block-end: 0;
    }

    .wave--top {
        inset-block-start: 0;
    }

    .md\:hidden {
        display: none;
    }

    .md\:flow-lg > * + * {
        margin-block-start: var(--space-lg);
    }

    .md\:flow-xl > * + * {
        margin-block-start: var(--space-xl);
    }

    .grid {
        grid-template-columns: repeat(var(--columns), 1fr);
    }

    .two\:three,
    .three\:two {
        align-items: center;
        flex-direction: row;
        justify-content: space-between;
    }

    .two\:three > * + *,
    .three\:two > * + * {
        margin-block-start: 0;
    }

    .two\:three__two,
    .three\:two__two {
        width: calc((2 / 5 * 100%) - var(--space) / 2);
    }

    .two\:three__three,
    .three\:two__three {
        display: block;
        width: calc((3 / 5 * 100%) - var(--space) / 2);

        > img,
        > picture {
            max-width: 100%;
        }
    }
}
